---
- name: upgrade | Create tempory dir
  ansible.builtin.tempfile:
    state: directory
    suffix: temp
  register: temp_dir_creation
- name: upgrade | Set Facts temp directory
  ansible.builtin.set_fact:
    temp_dir: '{{ temp_dir_creation.path }}'
    lock: '{{ dolibarr_main_data_root }}/install.lock'
    current_full_version: "{{ (dolibarr_current_installed_version | string | split('.'))[0] + '.0.0' }}"
    next_full_version: "{{ (dolibarr_version | string | split('.'))[0] + '.0.0' }}"
- name: upgrade | Create a temp directory
  ansible.builtin.file:
    path: '{{ temp_dir }}'
    state: directory
    mode: 0777
- name: upgrade | Remove lock {{ lock }}
  ansible.builtin.file:
    path: '{{ lock }}'
    state: absent
- name: upgrade | Upgrade the database (step 1/3)
  ansible.builtin.shell: |
    php upgrade.php {{ current_full_version }} {{ next_full_version }} > {{ temp_dir }}/output1.html
  args:
    chdir: '{{ dolibarr_main_document_root }}/install/'
  changed_when: false  # dirty solution to avoid molecule returning error on command without changed_when
- name: upgrade | Upgrade the database (step 2/3)
  ansible.builtin.shell: |
    php upgrade2.php {{ current_full_version }} {{ next_full_version }} > {{ temp_dir }}/output2.html
  args:
    chdir: '{{ dolibarr_main_document_root }}/install/'
  changed_when: false
- name: upgrade | Upgrade the database (step 3/3)
  ansible.builtin.shell: |
    php step5.php {{ current_full_version }} {{ next_full_version }} > {{ temp_dir }}/output3.html
  args:
    chdir: '{{ dolibarr_main_document_root }}/install/'
  changed_when: false
- name: upgrade | Restore lock
  become: true
  become_user: root
  ansible.builtin.file:
    path: '{{ lock }}'
    state: touch
    mode: 0444
