---
# tasks file for configure
- name: Create directories (for document and config)
  block:
    - name: Create documents directory
      ansible.builtin.file:
        path: '{{ dolibarr_main_data_root }}'
        state: directory
        owner: '{{ dolibarr_http_user }}'
        group: '{{ dolibarr_http_user }}'
        mode: '0740'

- name: Test if conf file exist
  tags:
    - dolibarr_enforce_generate_configuration
  ansible.builtin.stat:
    path: '{{ dolibarr_http_rootdir }}/{{ dolibarr_domain }}/conf/conf.php'
  register: dolibarr_conf_file

- name: Add variable to enforce config file generation
  tags:
    - dolibarr_enforce_generate_configuration
    - never
  ansible.builtin.set_fact:
    __dolibarr_configure_enforce_config_creation: true

- name: Template configuration file
  when: not dolibarr_conf_file.stat.exists or __dolibarr_configure_enforce_config_creation
  tags:
    - dolibarr_enforce_generate_configuration
  ansible.builtin.template:
    src: conf.php.jinja2
    dest: '{{ dolibarr_http_rootdir }}/{{ dolibarr_domain }}/conf/conf.php'
    owner: '{{ dolibarr_http_user }}'
    group: '{{ dolibarr_http_user }}'
    mode: '0740'

- name: Run step1.php to init the database
  ansible.builtin.command:
    cmd: |
      php step1.php set fr {{ dolibarr_main_document_root }}
      {{ dolibarr_main_data_root }}
      {{ dolibarr_http_proto }}://{{ dolibarr_domain }}
      root root
      {{ dolibarr_main_db_type }} {{ dolibarr_main_db_host }}
      {{ dolibarr_main_db_name }} {{ dolibarr_main_db_user }}
      {{ dolibarr_main_db_pass }} {{ dolibarr_main_db_port }} llx_
    chdir: '{{ dolibarr_http_rootdir }}/{{ dolibarr_domain }}/install/'
    creates: '{{ dolibarr_main_data_root }}/install.lock'
  become: true
  become_user: '{{ dolibarr_http_user }}'

- name: Run step2.php to init the database
  ansible.builtin.command:
    cmd: php step2.php set
    chdir: '{{ dolibarr_http_rootdir }}/{{ dolibarr_domain }}/install/'
    creates: '{{ dolibarr_main_data_root }}/install.lock'
  failed_when: false
  become: true
  become_user: '{{ dolibarr_http_user }}'

- name: Run step5.php to init the database
  ansible.builtin.command:
    cmd: php step5.php {{ dolibarr_versionÂ }} {{ dolibarr_version }} fr set  admin
      admin admin
    chdir: '{{ dolibarr_http_rootdir }}/{{ dolibarr_domain }}/install/'
    creates: '{{ dolibarr_main_data_root }}/install.lock'
  failed_when: false
  become: true
  become_user: '{{ dolibarr_http_user }}'

- name: Test if lock file exist
  ansible.builtin.stat:
    path: '{{ dolibarr_main_data_root }}/install.lock'
  register: dolibarr_lock_file

- name: Lock install and upgrade process
  when: not dolibarr_lock_file.stat.exists
  ansible.builtin.file:
    path: '{{ dolibarr_main_data_root }}/install.lock'
    state: touch
    owner: root
    group: root
    mode: '0444'
